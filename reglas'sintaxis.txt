El CSS al igual que el HTML tiene una sintaxis a la hora de crear las clases y sus atributos.
SINTAXIS BASICA:
selector {
  propiedad1: valor;
  propiedad2: valor;
}

REGLA  1
Cada declaración CSS está formada por un juego de pares propiedad: valor; no es con un igual ‘=’ (como pasa con los atributos HTML), sino con dos puntos ‘:’. Si a un elemento se le aplica más de una propiedad se deben separar con punto y coma ‘;’
EJEMPLO:
 p {
  color: red;
   font-size: 16px
   }


REGLA  2
Tampoco se ve afectado por el espacio en blanco. Las propiedades se pueden escribir de corrido o una debajo de la otra. Los comentarios se hacen como en Javascript (utilizando /* … */). Lo que esté comentado, será ignorado por CSS.
EJEMPLO:
P {
  color: red;  font-size: 16px;
  border:     solid    1px     green;
  /* comentario ignorado por css */
}


REGLA  3
Siempre que la propiedad representa un número, el valor debe indicar en qué unidad se expresa. Entre el número y la unidad no pueden existir espacios.
EJEMPLO:
p{
  font-size: 16px;
  padding: 10%;
  width: 23em;
}


REGLA  4
Siempre que la propiedad representa un color, el valor se puede expresar de tres maneras distintas: Por nombre del color (en inglés). Por hexadecimal (numeral + 6 caracteres). Por rgb (red, green, blue), tres números de 0 a 255, separados por coma.
Los componentes RGB de un color también se pueden indicar mediante un porcentaje. El funcionamiento y la sintaxis de este método es el mismo que el del RGB decimal. La única diferencia es que en este caso el valor de las componentes RGB puede tomar valores entre 0% y 100%. Por tanto, para transformar un valor RGB decimal en un valor RGB porcentual, es preciso realizar una regla de tres considerando que 0 es igual a 0% y 255 es igual a 100%.
EJEMPLO:
p {
  color: red;
  background-color: #ff033;
  border-color: rgb(255, 0, 0);
}


REGLA 5
Si se necesita aplicar el mismo formato CSS a más de un elemento diferente, no hace falta escribir dos veces todas las propiedades. Si se escribe más de un elemento, separado por comas, aplica el mismo formato a todos.
EJEMPLO:
#elemento1, .grupo1 , p {
  color: red;
  padding: 10%;
  border: solid 2em #33ff44;
}